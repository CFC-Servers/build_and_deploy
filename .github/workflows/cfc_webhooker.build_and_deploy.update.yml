env:
  projectUrl: 'CFC-Servers/cfc_webhooker'
  projectBranch: 'master'
  projectWorkflow: build_and_deploy
  reviewers: |
    brandonsturgeon
    plally

name: 'CFC Webhooker | Build and Deploy'

on:
  push:
    tags:
      - '*'

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: workflows
          fetch-depth: 0

      - name: Get the workflow version
        id: workflow_versions
        run: |
          # Gets the names of the two latest tags
          cd "$GITHUB_WORKSPACE/workflows/"
          echo ::set-output name=VERSION::$(git describe --abbrev=0 --tags `git rev-list --tags --skip=0 --max-count=1`)
          echo ::set-output name=PREVIOUS_VERSION::$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          cd -

      - name: Exit early if no update
        id: workflow_updated
        env:
          PROJECT_VERSION: ${{ steps.workflow_versions.outputs.VERSION }}
          PREVIOUS_PROJECT_VERSION: ${{ steps.workflow_versions.outputs.PREVIOUS_VERSION }}
          PROJECT_WORKFLOW: ${{ env.projectWorkflow }}
        run: |
          # Get the diff between the two latest tags, search for given workflow
          cd "$GITHUB_WORKSPACE/workflows/"

          (git --no-pager diff --name-only "$PREVIOUS_PROJECT_VERSION" "$PROJECT_VERSION" | grep -w "workflows/$PROJECT_WORKFLOW.yml") &&
          echo ::set-output name=WORKFLOW_UPDATED::$(echo "yes") ||
          echo ::set-output name=WORKFLOW_UPDATED::$(echo "no")

          cd -

      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ steps.workflow_updated.outputs.WORKFLOW_UPDATED == 'yes' }}
        with:
          repository: ${{ env.projectUrl }}
          token: ${{ secrets.GH_TOKEN }}
          path: project

      - name: Check if project workflow is outdated
        id: project_outdated
        if: ${{ steps.workflow_updated.outputs.WORKFLOW_UPDATED == 'yes' }}
        env:
          PROJECT_WORKFLOW: "$GITHUB_WORKSPACE/projects/.github/workflows/${{ env.projectWorkflow }}.yml"
          CURRENT_WORKFLOW: "$GITHUB_WORKSPACE/workflows/workflows/${{ env.projectWorkflow }}.yml"
        run: |
          # Compares the current project workflow and the latest workflow to determine if an updated is actually needed
          cmp --silent "$PROJECT_WORKFLOW" "$CURRENT_WORKFLOW" &&
          echo ::set-output name=PROJECT_OUTDATED::$(echo "no") ||
          echo ::set-output name=PROJECT_OUTDATED::$(echo "yes")

      - name: Update workflow version
        if: |
          ${{ steps.workflow_updated.outputs.WORKFLOW_UPDATED == 'yes' }} ||
          ${{ steps.project_outdated.outputs.PROJECT_OUTDATED == 'yes' }}
        run: |
          mkdir -p "$GITHUB_WORKSPACE/project/.github/workflows"
          cat "$GITHUB_WORKSPACE/workflows/workflows/${{ env.projectWorkflow }}.yml" > "$GITHUB_WORKSPACE/project/.github/workflows/${{ env.projectWorkflow }}.yml"

      - name: Get version diff link
        id: version_diff
        if: |
          ${{ steps.workflow_updated.outputs.WORKFLOW_UPDATED == 'yes' }} ||
          ${{ steps.project_outdated.outputs.PROJECT_OUTDATED == 'yes' }}
        env:
          VERSION_DIFF: ${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.workflow_versions.outputs.PREVIOUS_VERSION }}..${{ steps.workflow_versions.outputs.VERSION }}
        run: echo ::set-output name=VERSION_DIFF::$(echo "$VERSION_DIFF")

      - name: Open PR with changes
        uses: peter-evans/create-pull-request@v3
        if: |
          ${{ steps.workflow_updated.outputs.WORKFLOW_UPDATED == 'yes' }} ||
          ${{ steps.project_outdated.outputs.PROJECT_OUTDATED == 'yes' }}
        with:
          token: ${{ secrets.GH_TOKEN }}
          path: project
          commit-message: "Update ${{ env.projectWorkflow }} workflow to ${{ steps.workflow_versions.outputs.VERSION }}"
          branch: "update-workflow-${{ steps.workflow_versions.outputs.VERSION }}"
          delete-branch: true
          base: ${{ env.projectBranch }}
          title: "Update ${{ env.projectWorkflow }} workflow to ${{ steps.workflow_versions.outputs.VERSION }}"
          body: "This PR was automatically triggered due to [a change in the base `${{ env.projectWorkflow }}` workflow](${{ steps.version_diff.outputs.VERSION_DIFF }})"
          reviewers: ${{ env.reviewers }}
